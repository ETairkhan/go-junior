openapi: 3.0.0
info:
  title: Go Junior API
  description: API for managing people.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server
paths:
  /api/people:
    get:
      summary: Get a list of people
      parameters:
        - name: gender
          in: query
          description: Filter by gender
          required: false
          schema:
            type: string
        - name: nationality
          in: query
          description: Filter by nationality
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of results per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: A list of people
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
    post:
      summary: Create a new person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '201':
          description: Person created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
  /api/people/{id}:
    get:
      summary: Get a person by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A single person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
    put:
      summary: Update a person by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: Person updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
    delete:
      summary: Delete a person by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Person deleted successfully
components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: John
        surname:
          type: string
          example: Doe
        patronymic:
          type: string
          example: Smith
        age:
          type: integer
          example: 30
        gender:
          type: string
          example: male
        nationality:
          type: string
          example: US